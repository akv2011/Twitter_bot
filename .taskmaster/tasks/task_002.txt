# Task ID: 2
# Title: Secure Configuration and Token Management
# Status: todo
# Dependencies: 1
# Priority: high
# Description: Implement a secure system for managing API keys (Twitter, Claude), user access/refresh tokens, and other application settings.
# Details:
Use `python-dotenv` for loading environment variables in local development. For production, rely on environment variables injected by the deployment environment. Store user-specific tokens (access and refresh) in a PostgreSQL database. Encrypt these tokens at the application level using a library like `cryptography` before database insertion. Implement a service to automatically refresh the Twitter access token using the stored refresh token when it expires.

# Test Strategy:
Verify that API keys are not hardcoded. Test the token encryption and decryption functions. Write a unit test for the token refresh logic, mocking an 'expired token' response from the Twitter API to ensure the refresh flow is triggered correctly.
